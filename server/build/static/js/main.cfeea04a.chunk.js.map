{"version":3,"sources":["Components/MenuAppBar.jsx","Components/Header.jsx","assets/logo192.png","Components/QuoteContainer.jsx","Components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ElevationScroll","props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","HideAppBar","classes","useState","auth","authAnchorEl","setAuthAnchorEl","menuAnchorEl","setMenuAnchorEl","openAuthMenu","Boolean","openMenu","handleClose","Fragment","CssBaseline","AppBar","className","Toolbar","IconButton","onClick","event","currentTarget","edge","color","aria-label","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Typography","variant","aria-controls","aria-haspopup","Header","style","width","paddingBottom","bgStyle","api","createApi","accessKey","button_root","background","border","borderRadius","boxShadow","height","padding","marginTop","QuoteContainer","quote","setQuote","submittedQuote","setSubmittedQuote","imgSrc","setImgSrc","loading","setLoading","fetchImage","useCallback","a","photos","getRandom","query","count","orientation","result","response","urls","regular","CircularProgress","href","OutlinedInput","value","onChange","e","placeholder","Button","preventDefault","lineHeight","position","src","watermark","alt","App","setBgStyle","useEffect","full","backgroundPosition","backgroundRepeat","backgroundSize","backgroundColor","console","log","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfeea04a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function HideAppBar(props) {\n\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [authAnchorEl, setAuthAnchorEl] = React.useState(null);\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState(null);\n  const openAuthMenu = Boolean(authAnchorEl);\n  const openMenu = Boolean(menuAnchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setMenuAnchorEl(event.currentTarget);\n  }\n\n  const handleAuthMenu = (event) => {\n    setAuthAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setMenuAnchorEl(null);\n    setAuthAnchorEl(null)\n  };\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: props.window ? window() : undefined,\n  });\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ElevationScroll {...props}>\n      <AppBar className=\"navbar\">\n          <Toolbar>\n            <IconButton onClick={handleMenu} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={menuAnchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={openMenu}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose}>More info coming soon!</MenuItem>\n                  {/* <MenuItem onClick={handleClose}>My account</MenuItem> */}\n                </Menu>\n            <Typography variant=\"h6\" className={classes.title}>\n              {trigger ? \"Better Than Yesterday\" : null}\n            </Typography>\n            {auth && (\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleAuthMenu}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={authAnchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={openAuthMenu}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose}>Sign up coming soon!</MenuItem>\n                  {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem> */}\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n","import { Typography } from '@material-ui/core';\nimport MenuAppBar from './MenuAppBar';\n\nconst Header = props => {\n  return (\n    <div style={{ width: \"100%\", paddingBottom: 12 }}>\n      <MenuAppBar {...props} />\n      <header style={props.bgStyle} className=\"App-header\">\n        <Typography id=\"header-logo\" variant=\"h1\">\n          Be Better Than Yesterday\n        </Typography>\n      </header>\n    </div>\n  )\n};\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/logo192.cc349657.png\";","import { useCallback, useState } from 'react';\nimport {  Button, OutlinedInput, CircularProgress, Typography } from '@material-ui/core';\nimport html2canvas from 'html2canvas';\nimport { saveAs } from 'file-saver';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createApi } from \"unsplash-js\";\nimport watermark from '../assets/logo192.png'\n\nconst api = createApi({\n  // Don't forget to set your access token here!\n  // See https://unsplash.com/developers\n  accessKey: \"cDt2eI6eJSUZZvHbsDHp9ESR2h04QqZ1zl7QByMXvlI\"\n});\n\nconst useStyles = makeStyles({\n  button_root: {\n    background: 'linear-gradient(45deg, #fed2ae 5%, #FF8E53 150%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    marginTop: '1em'\n  },\n});\n\nconst QuoteContainer = props => {\n  const classes = useStyles();\n  const [imgStyle, setImgStyle] = useState({});\n  const [quote, setQuote] = useState('');\n  const [submittedQuote, setSubmittedQuote] = useState('');\n  const [imgSrc, setImgSrc] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n\n  const takeShot = () => {\n    var element = document.getElementById(\"quote-photo\");\n    console.log('element', element)\n\n    html2canvas(element).then(function(canvas) {\n      console.log('canvas', canvas)\n      canvas.toBlob(function(blob) {\n        console.log('blob', blob)\n        const imgdl = saveAs(blob, \"fucking.png\")\n      })\n      // const img = canvas.toDataURL(\"image/png\");;\n      // document.write('<img src=\"'+img+'\"/>');\n    });\n  };\n\n  const fetchImage = useCallback(async () => {\n    setLoading(true);\n    const result = await api.photos.getRandom({\n      query: 'city',\n      count: 1,\n      orientation: 'portrait'\n    })\n    setImgSrc(result.response[0].urls.regular)\n    setLoading(false);\n  }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    fetchImage();\n    setSubmittedQuote(quote);\n    setQuote('')\n  };\n\n  const handleQuoteChange = e => {\n    setQuote(e.target.value);\n  }\n\n  return (\n    <div className='quote-container'>\n      {\n        !loading ? (\n          <>\n            <div id='quote-textfield-container'>\n              <div id='copy-container'>\n                <Typography variant=\"h3\">\n                  Quote Image Generator\n                </Typography>\n\n                <Typography variant=\"h4\">\n                  Free Online Quote Image Generator\n                </Typography>\n\n                <Typography variant=\"h6\">\n                  Less working, more creating!\n                </Typography>\n\n                <br/>\n                <br/>\n\n                <Typography variant=\"subtitle1\">\n                With this tool you can generate beautiful, pre-filtered images with your favorite quote. The <b>Free Online Quote Image Generator</b> takes in any quote and layers that on-top of an AI-generated image from a curated list of beautiful images from  <a href=\"http://unsplash.com\">Unsplash</a>.\n                <br/>\n                <br/>\n                <b>Simply enter your favorite quote below, submit & screenshot!</b>\n                </Typography>\n                <br/>\n                <br/>\n              </div>\n              <OutlinedInput\n                id='quote-textfield'\n                value={quote}\n                onChange={handleQuoteChange}\n                placeholder='Enter Your Quote'\n              />\n              {/* <OutlinedInput\n                id='quote-textfield'\n                value={author}\n                onChange={handleAuthorChange}\n                placeholder='Enter Your Quote'\n              /> */}\n              <Button className={classes.button_root} onClick={handleSubmit}>Submit</Button>\n              <br/>\n            </div>\n            {\n              submittedQuote ? (\n              <div id='quote-photo'>\n                <div id='quote-overlay' style={{ width: \"300px\", height: \"700px\", lineHeight: \"36px\" }}>\n                  <span id='submitted-quote'>\n                    {submittedQuote}\n                  </span>\n                  <div id='watermark-container' style={{ position: 'relative', width: '400px' }} >\n                    <img id='watermark' src={watermark} alt={watermark} />\n                  </div>\n                  <img src={imgSrc} alt={imgSrc} style={{ width: 370 }}  />\n                </div>\n              </div>\n              ) : null\n            }\n            {/* <div>\n              {\n                submittedQuote ? (\n                  <Button className={classes.button_root} onClick={takeShot}>Download</Button>\n                ) : null\n              }\n            </div> */}\n          </>\n        ) : (           \n        <div id='circular-progress'>\n          <CircularProgress />\n        </div>)\n      }\n    </div>  \n  )\n};\n\nexport default QuoteContainer;","import React from 'react'\nimport { CircularProgress, Typography } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport '../Stylesheets/App.css';\nimport Header from './Header';\nimport QuoteContainer from './QuoteContainer';\nimport { createApi } from \"unsplash-js\";\n\nconst api = createApi({\n  // Don't forget to set your access token here!\n  // See https://unsplash.com/developers\n  accessKey: \"cDt2eI6eJSUZZvHbsDHp9ESR2h04QqZ1zl7QByMXvlI\"\n});\n\nfunction App(props) {\n  const [bgStyle, setBgStyle] = useState({});\n  // const [imgSrc, setImgSrc] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // if (!loading) {\n      const fetchData = async () => {\n      // setLoading(true);\n        const result = await api.photos.getRandom({\n          query: 'new york city',\n          count: 1,\n          orientation: 'landscape'\n        });\n        await setBgStyle({\n          background: `linear-gradient(rgba(0,0,0,0.45), rgba(0,0,0,0.45)), url(${result.response[0].urls.full})`,\n          height:\"69vh\",\n          width: \"100vw\",\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          backgroundColor: \"#89b0ae\"\n         });\n        await setLoading(false);\n        console.log(result)\n      }\n      fetchData();\n    // }\n  }, [])\n  return (\n    <div className=\"App\">\n      {\n        loading ? (\n          <div id='circular-progress'>\n            <CircularProgress />\n          </div>\n        ) : (\n          <>\n            <Header {...props} bgStyle={bgStyle} />\n            <QuoteContainer {...props} />\n          </>\n        )\n      }\n      <footer>\n        <div className='footer-container'>\n          <div className='footer-text-container'>\n            <Typography variant=\"h6\">\n              Contact us 📧: <a href=\"ep@betterthanyesterday.io\">support@betterthanyesterday.io</a>\n            </Typography>\n          </div>\n        </div>\n        <span style={{ color: '#faf9f9' }}>Copyright © 2012-2021 betterthanyesterday.io. All rights reserved.</span>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport './Stylesheets/index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { config } from 'dotenv';\nconfig();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}